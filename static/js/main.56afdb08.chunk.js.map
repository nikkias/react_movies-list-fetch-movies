{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","_ref$onMoviesAdd","onMoviesAdd","_useState","useState","_useState2","_slicedToArray","movieTitle","setMovieTitle","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","_useState7","_useState8","setMovie","_useState9","_useState10","searchBtnTitle","setSearchBtnTitle","_useState11","_useState12","response","setResponse","useEffect","Title","Plot","Poster","concat","imdbID","_Fragment","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","newMovie","prevMovies","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56afdb08.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onMoviesAdd?: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onMoviesAdd = () => { },\n}) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [searchBtnTitle, setSearchBtnTitle] = useState('Find a movie');\n  const [response, setResponse]\n    = useState<MovieData | ResponseError | null>(null);\n  const handleMovieTitleChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setMovieTitle(event.target.value);\n      setIsError(false);\n    };\n\n  const handleAddBtnClick = () => {\n    if (movie) {\n      onMoviesAdd(movie);\n      setMovie(null);\n    }\n  };\n\n  useEffect(() => {\n    if (!response) {\n      return;\n    }\n\n    if ('Poster' in response\n      && 'Title' in response\n      && 'Plot' in response\n      && 'imdbID' in response\n    ) {\n      setMovie({\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      });\n\n      setMovieTitle('');\n      setSearchBtnTitle('Search again');\n    }\n\n    if ('Error' in response) {\n      setIsError(true);\n      setSearchBtnTitle('Find a movie');\n    }\n  }, [response]);\n\n  // eslint-disable-line\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(movieTitle)\n      .then(setResponse)\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isError,\n              })}\n              value={movieTitle}\n              onChange={handleMovieTitleChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!movieTitle}\n            >\n              {searchBtnTitle}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddBtnClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d049b4a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const onMoviesAdd = (newMovie: Movie) => {\n    setMovies((prevMovies) => {\n      return prevMovies.find(movie => movie.imdbId === newMovie.imdbId)\n        ? prevMovies\n        : [...prevMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMoviesAdd={onMoviesAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}